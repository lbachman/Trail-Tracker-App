@page
@model Trail_Tracker_App.Pages.Mountains.IndexModel
@using Microsoft.AspNetCore.Html
@using System.Text.Encodings.Web

@{
    ViewData["Title"] = "Index";
}

<h1>Mountains</h1>

<p>
    <a asp-page="Create" class="btn btn-info" role="button">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Mountain[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mountain[0].Zip)
            </th>
            <th>
                Height(ft)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.Mountain[0].Range)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mountain[0].Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Mountain) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zip)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Height)
            </td>
            
            <td>
                @Html.DisplayFor(modelItem => item.Range.Name)
            </td>
            <td>
                @TruncateHtmlContent(Html.DisplayFor(modelItem => item.Description), 50)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.MountainId" class="btn btn-secondary">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.MountainId" class="btn btn-secondary">View</a> |
                    <a asp-page="./Delete" asp-route-id="@item.MountainId" class="btn btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


@* Helper method to truncate description text *@
@functions {
    public string TruncateHtmlContent(IHtmlContent content, int maxLength)
    {
        if (content == null)
        {
            return string.Empty;
        }

        // Convert IHtmlContent to string
        using (var writer = new StringWriter())
        {
            content.WriteTo(writer, HtmlEncoder.Default);
            var text = writer.ToString();

            // Truncate the text if it exceeds maxLength
            if (text.Length > maxLength)
            {
                return text.Substring(0, maxLength) + "...";
            }

            return text;
        }
    }
}
